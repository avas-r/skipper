apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orchestrator-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - skipper2.com
    - api.skipper2.com
    - minio.skipper2.com
    - rabbitmq.skipper2.com
    secretName: skipper-tls-cert
  rules:
  - host: skipper2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: orchestrator-frontend
            port:
              number: 80
  - host: api.skipper2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: orchestrator-api
            port:
              number: 80
      - path: /api/v1/agents
        pathType: Prefix
        backend:
          service:
            name: orchestrator-api
            port:
              number: 80
  - host: minio.orchestrator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio
            port:
              number: 9001
  - host: rabbitmq.orchestrator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rabbitmq
            port:
              number: 15672
---
apiVersion: v1
kind: Secret
metadata:
  name: orchestrator-secrets
type: Opaque
data:
  secret-key: YTEyM2VkZWYxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDE=  # a123edef1234567890123456789012345678901234567890123456789012
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-api
  labels:
    app: orchestrator
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: orchestrator
      component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: orchestrator
        component: api
    spec:
      containers:
      - name: api
        image: orchestrator-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: POSTGRES_SERVER
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: POSTGRES_DB
          value: "orchestrator"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: password
        - name: MINIO_HOST
          value: "minio"
        - name: MINIO_PORT
          value: "9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret-key
        - name: REDIS_HOST
          value: "redis"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: secret-key
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: packages
          mountPath: /app/packages
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: orchestrator-uploads-pvc
      - name: packages
        persistentVolumeClaim:
          claimName: orchestrator-packages-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-worker
  labels:
    app: orchestrator
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator
      component: worker
  template:
    metadata:
      labels:
        app: orchestrator
        component: worker
    spec:
      containers:
      - name: worker
        image: orchestrator-api:latest
        imagePullPolicy: IfNotPresent
        command: ["python", "-m", "app.workers.run_workers"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: POSTGRES_SERVER
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: POSTGRES_DB
          value: "orchestrator"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: password
        - name: MINIO_HOST
          value: "minio"
        - name: MINIO_PORT
          value: "9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret-key
        - name: REDIS_HOST
          value: "redis"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: secret-key
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: packages
          mountPath: /app/packages
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: orchestrator-uploads-pvc
      - name: packages
        persistentVolumeClaim:
          claimName: orchestrator-packages-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-api
  labels:
    app: orchestrator
    component: api
spec:
  selector:
    app: orchestrator
    component: api
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orchestrator-uploads-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orchestrator-packages-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard